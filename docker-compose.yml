version: '2'
services:
  rabbit:
    image: rabbitmq:3-management
    restart: unless-stopped
    container_name: rabbit
    ports:
      - 15672:15672
      - 5672:5672
    hostname: rabbit
    networks:
      - default    

  postgres:
    image: postgres
    restart: unless-stopped
    container_name: postgres
    env_file:
      - env/postgres.env
    ports:
      - 5432:5432
    volumes:
      - ./init/database-dev.sql:/docker-entrypoint-initdb.d/init.sql
      - dataPostgres:/var/lib/postgresql/data
    hostname: postgres
    networks:
      - default

  mongo:
    image: mongo
    restart: unless-stopped
    container_name: mongo
    ports:
      - 27017:27017
    hostname: mongo
    volumes:
      - dataMongo:/data/db
    networks:
      - default

  ftp:
    image: danjellz/http-server
    restart: unless-stopped
    container_name: httpServer
    ports:
      - 5002:8080
    hostname: http-server
    volumes:
     - data:/public
    networks:
      - default 

  room-server:
    image: kju7pwd2/animemanga-roomserver:latest
    restart: unless-stopped
    container_name: roomServer
    ports:
      - 5001:1234
    hostname: room-server
    networks:
      - default 

  api:
    image: kju7pwd2/animemanga-apiservice:latest
    restart: unless-stopped
    container_name: apiService
    env_file:
      - env/rabbit.env
      - env/api.env
      - env/storage.env
    volumes:
      - ./schemaDefault/schemas.json:/app/schemas.json
      - ./schemaDefault/schema_template.json:/app/schema_template.json
    depends_on:
      - mongo
      - postgres
      - rabbit
    hostname: api

  web:
    image: kju7pwd2/animemanga-web:latest
    restart: unless-stopped
    container_name: web
    env_file:
      - env/web.env
    ports:
      - 3000:3000
    depends_on:
      - api
      - ftp
      - room-server
    hostname: web
    networks:
      - default
  
  updateservice-anime:
    image: kju7pwd2/animemanga-updateservice:latest
    restart: unless-stopped
    container_name: updateService-anime
    env_file:
      - env/rabbit.env
      - env/storage.env
      - env/update.env
      - env/api_public.env
    environment:
      SELECT_SERVICE: "video"
    volumes:
      - ./schemaDefault/schemas.json:/app/schemas.json
      - ./schemaDefault/schema_template.json:/app/schema_template.json
      - data:/public
    depends_on:
      - api
      - rabbit

  updateservice-manga:
    image: kju7pwd2/animemanga-updateservice:latest
    restart: unless-stopped
    container_name: updateService-manga
    env_file:
      - env/rabbit.env
      - env/storage.env
      - env/update.env
      - env/api_public.env
    environment:
      SELECT_SERVICE: "book"
    volumes:
      - ./schemaDefault/schemas.json:/app/schemas.json
      - ./schemaDefault/schema_template.json:/app/schema_template.json
      - data:/public
    depends_on:
      - api
      - rabbit

  upgradeservice-anime:
      image: kju7pwd2/animemanga-upgradeservice:latest
      restart: unless-stopped
      container_name: upgradeService-anime
      env_file:
        - env/rabbit.env
        - env/storage.env
        - env/upgrade.env
        - env/api_public.env
      environment:
        SELECT_SERVICE: "video"
      volumes:
        - ./schemaDefault/schemas.json:/app/schemas.json
        - ./schemaDefault/schema_template.json:/app/schema_template.json
      depends_on:
        - api
        - rabbit

  upgradeservice-manga:
      image: kju7pwd2/animemanga-upgradeservice:latest
      restart: unless-stopped
      container_name: upgradeService-manga
      env_file:
        - env/rabbit.env
        - env/storage.env
        - env/upgrade.env
        - env/api_public.env
      environment:
        SELECT_SERVICE: "book"
      volumes:
        - ./schemaDefault/schemas.json:/app/schemas.json
        - ./schemaDefault/schema_template.json:/app/schema_template.json
      depends_on:
        - api
        - rabbit

  downloadservice:
    image: kju7pwd2/animemanga-downloadservice:latest
    restart: unless-stopped
    container_name: downloadService
    env_file:
      - env/rabbit.env
      - env/storage.env
      - env/storage_temp.env
      - env/download.env
      - env/api_public.env
    volumes:
      - ./schemaDefault/schemas.json:/app/schemas.json
      - ./schemaDefault/schema_template.json:/app/schema_template.json
      - temp:/temp
      - data:/public
    depends_on:
      - rabbit
      - api
    hostname: downloadservice

  notifyservice:
    image: kju7pwd2/animemanga-notifyservice:latest
    restart: unless-stopped
    container_name: notifyService
    env_file:
      - env/rabbit.env
      - env/api_public.env
      - env/notify.env
    depends_on:
      - rabbit
      - api

  conversionservice:
    image: kju7pwd2/animemanga-conversionservice:latest
    restart: unless-stopped
    container_name: conversionService
    command: bash -c "apt update && apt install -y ffmpeg"
    env_file:
      - env/rabbit.env
      - env/api_public.env
      - env/storage.env
      - env/storage_temp.env
      - env/conversion.env
    volumes:
      - temp:/temp
      - data:/public
    depends_on:
      - rabbit
      - api

networks:
  default:
    driver: bridge

volumes:
  data:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: '/animeMnaga/data'
  temp:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: '/animeMnaga/temp'
  dataPostgres:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: '/animeMnaga/dataPostgres'
  dataMongo:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: '/animeMnaga/dataMongo'